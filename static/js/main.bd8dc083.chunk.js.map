{"version":3,"sources":["FirebaseDB/FirebaseDB.js","microBit.js","pages/VirtualMicrobit.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","uBit","this","accelerometer","x","y","z","magnetometer_raw","magnetometer_bearing","temperature","buttonA","buttonACallBack","buttonB","buttonBCallBack","connected","onConnectCallback","onDisconnectCallback","onBLENotifyCallback","characteristic","IO_PIN_DATA","IO_AD_CONFIG","IO_PIN_CONFIG","IO_PIN_PWM","LED_STATE","LED_TEXT","LED_SCROLL","callbackFunction","pin","icon","ledMatrix","Int8Array","buffer","i","j","string","join","parseInt","writeValue","then","_","catch","error","console","log","speed","Uint8Array","str","utf8","length","charcode","charCodeAt","push","toUTF8Array","event","target","uuid","value","getInt8","onButtonA","onButtonB","getInt16","options","JSON","stringify","navigator","bluetooth","requestDevice","device","name","id","addEventListener","gatt","connect","server","getPrimaryServices","services","queue","Promise","resolve","forEach","service","getCharacteristics","characteristics","getSupportedProperties","includes","startNotifications","err","characteristic_updated","bind","supportedProperties","p","properties","toUpperCase","Board","props","state","squares","Array","fill","buttonName","iconFetch","search","displayControll","submitControll","microBit","connectionStatus","iconFetchAll","selectOptions","setState","slice","coor","keyValue","item","className","onClick","handleClick","preventDefault","collection","doc","get","exists","data","clear","alert","nameArray","res","docs","map","a","board","square","index","set","ledMatrix_row0","ledMatrix_row1","ledMatrix_row2","ledMatrix_row3","ledMatrix_row4","writeMatrixIcon","renderSquare","style","textAlign","IconButton","color","searchDevice","onMouseEnter","validatePair","lightIcon","validate","autoComplete","onSubmit","saveIcon","TextField","label","required","onChange","setName","margin","width","type","disabled","checkIcon","fetchIcon","setSearch","display","displayIcon","select","key","MenuItem","fetchIconAll","React","Component","VirtualMicrobit","Container","justify","Card","CardContent","Typography","variant","component","gutterBottom","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd8dc083.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\n// firebase configuration setup\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCGkvmcE2WSGe3VKN_N96P3b5eApj9O08g\",\r\n    authDomain: \"pattern-coordinates.firebaseapp.com\",\r\n    projectId: \"pattern-coordinates\",\r\n    storageBucket: \"pattern-coordinates.appspot.com\",\r\n    messagingSenderId: \"293694421535\",\r\n    appId: \"1:293694421535:web:9831f778960d8f1316b32a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n  let transformedCollection = [];\r\n  collections.docs.forEach((doc) => transformedCollection.push(doc.data()));\r\n  return transformedCollection;\r\n};\r\n\r\nexport default firebase;","var ACCEL_SRV = 'e95d0753-251d-470a-a062-fa1922dfa9a8'\r\nvar ACCEL_DATA = 'e95dca4b-251d-470a-a062-fa1922dfa9a8'\r\nvar ACCEL_PERIOD = 'e95dfb24-251d-470a-a062-fa1922dfa9a8'\r\nvar MAGNETO_SRV = 'e95df2d8-251d-470a-a062-fa1922dfa9a8'\r\nvar MAGNETO_DATA = 'e95dfb11-251d-470a-a062-fa1922dfa9a8'\r\nvar MAGNETO_PERIOD = 'e95d386c-251d-470a-a062-fa1922dfa9a8'\r\nvar MAGNETO_BEARING = 'e95d9715-251d-470a-a062-fa1922dfa9a8'\r\nvar BTN_SRV = 'e95d9882-251d-470a-a062-fa1922dfa9a8'\r\nvar BTN_A_STATE = 'e95dda90-251d-470a-a062-fa1922dfa9a8'\r\nvar BTN_B_STATE = 'e95dda91-251d-470a-a062-fa1922dfa9a8'\r\nvar IO_PIN_SRV = 'e95d127b-251d-470a-a062-fa1922dfa9a8'\r\nvar IO_PIN_DATA = 'e95d8d00-251d-470a-a062-fa1922dfa9a8'\r\nvar IO_AD_CONFIG = 'e95d5899-251d-470a-a062-fa1922dfa9a8'\r\nvar IO_PIN_CONFIG = 'e95db9fe-251d-470a-a062-fa1922dfa9a8'\r\nvar IO_PIN_PWM = 'e95dd822-251d-470a-a062-fa1922dfa9a8'\r\nvar LED_SRV = 'e95dd91d-251d-470a-a062-fa1922dfa9a8'\r\nvar LED_STATE = 'e95d7b77-251d-470a-a062-fa1922dfa9a8'\r\nvar LED_TEXT = 'e95d93ee-251d-470a-a062-fa1922dfa9a8'\r\nvar LED_SCROLL = 'e95d0d2d-251d-470a-a062-fa1922dfa9a8'\r\nvar TEMP_SRV = 'e95d6100-251d-470a-a062-fa1922dfa9a8'\r\nvar TEMP_DATA = 'e95d9250-251d-470a-a062-fa1922dfa9a8'\r\nvar TEMP_PERIOD = 'e95d1b25-251d-470a-a062-fa1922dfa9a8'\r\n\r\nexport class uBit {\r\n  \r\n  constructor() {\r\n    this.accelerometer = {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    };\r\n\r\n    this.magnetometer_raw = {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    };\r\n\r\n    this.magnetometer_bearing = 0;\r\n    this.temperature = 0;\r\n\r\n    this.buttonA = 0;\r\n    this.buttonACallBack=function(){};\r\n\r\n    this.buttonB = 0;\r\n    this.buttonBCallBack=function(){};\r\n\r\n    this.connected = false;\r\n\r\n    this.onConnectCallback=function(){};\r\n    this.onDisconnectCallback=function(){};\r\n\r\n    this.onBLENotifyCallback=function(){};\r\n\r\n    this.characteristic = {\r\n      IO_PIN_DATA: {},\r\n      IO_AD_CONFIG: {},\r\n      IO_PIN_CONFIG: {},\r\n      IO_PIN_PWM: {},\r\n      LED_STATE: {},\r\n      LED_TEXT: {},\r\n      LED_SCROLL: {},\r\n    }\r\n  }\r\n\r\n  getTemperature() {\r\n    return this.temperature;\r\n  }\r\n\r\n  getAccelerometer() {\r\n    return this.accelerometer;\r\n  }\r\n\r\n  getBearing() {\r\n    return this.magnetometer_bearing;\r\n  }\r\n\r\n  getButtonA() {\r\n    return this.buttonA;\r\n  }\r\n\r\n  setButtonACallback(callbackFunction){\r\n    this.buttonACallBack=callbackFunction;\r\n  }\r\n\r\n  getButtonB() {\r\n    return this.buttonB;\r\n  }\r\n\r\n  setButtonBCallback(callbackFunction){\r\n    this.buttonBCallBack=callbackFunction;\r\n  }\r\n\r\n  onConnect(callbackFunction){\r\n    this.onConnectCallback=callbackFunction;\r\n  }\r\n\r\n  onDisconnect(callbackFunction){\r\n    this.onDisconnectCallback=callbackFunction;\r\n  }\r\n\r\n  onBleNotify(callbackFunction){\r\n    this.onBLENotifyCallback=callbackFunction;\r\n  }\r\n\r\n  writePin(pin) {\r\n    //something like this should work, but we need to create the correct buffer\r\n    //this.characteristic.IO_PIN_DATA.writeValue(data);\r\n  }\r\n\r\n  readPin(pin) {\r\n\r\n  }\r\n\r\n  writeMatrixIcon(icon) {\r\n    var ledMatrix = new Int8Array(5);\r\n    var buffer = [\r\n      ['0', '0', '0', '0', '0', '0', '0', '0'],\r\n      ['0', '0', '0', '0', '0', '0', '0', '0'],\r\n      ['0', '0', '0', '0', '0', '0', '0', '0'],\r\n      ['0', '0', '0', '0', '0', '0', '0', '0'],\r\n      ['0', '0', '0', '0', '0', '0', '0', '0']\r\n    ]\r\n    for (var i = 0; i < 5; i++) {\r\n      for (var j = 0; j < 5; j++) {\r\n        buffer[i][7-j] = icon[i][4 - j]\r\n      }\r\n    }\r\n    for (var i = 0; i < 5; i++) {\r\n      var string = buffer[i].join(\"\");\r\n      ledMatrix[i]=parseInt(string,2)\r\n    }\r\n    if(this.connected){\r\n      this.characteristic.LED_STATE.writeValue(ledMatrix)\r\n      .then(_ => {\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  writeMatrixTextSpeed(speed){\r\n    var buffer= new Uint8Array(speed);\r\n    if(this.connected){\r\n      this.characteristic.LED_TEXT.writeValue(buffer)\r\n      .then(_ => {\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  writeMatrixText(str){\r\n    var buffer= new Uint8Array(toUTF8Array(str));\r\n    if(this.connected){\r\n      this.characteristic.LED_TEXT.writeValue(buffer)\r\n      .then(_ => {\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  onButtonA(){\r\n    this.buttonACallBack();\r\n  }\r\n\r\n  onButtonB(){\r\n    this.buttonBCallBack();\r\n  }\r\n\r\n  characteristic_updated(event) {\r\n\r\n    this.onBLENotifyCallback();\r\n    //BUTTON CHARACTERISTIC\r\n    if (event.target.uuid == BTN_A_STATE) {\r\n      //console.log(\"BTN_A_STATE\", event.target.value.getInt8());\r\n      this.buttonA = event.target.value.getInt8();\r\n      if (this.buttonA){\r\n        this.onButtonA();\r\n      }\r\n    }\r\n\r\n    if (event.target.uuid == BTN_B_STATE) {\r\n      //console.log(\"BTN_B_STATE\", event.target.value.getInt8());\r\n      this.buttonB = event.target.value.getInt8();\r\n      if (this.buttonB){\r\n        this.onButtonB();\r\n      }\r\n    }\r\n\r\n    //ACCELEROMETER CHARACTERISTIC\r\n    if (event.target.uuid == ACCEL_DATA) {\r\n      //true is for reading the bits as little-endian\r\n      //console.log(\"ACCEL_DATA_X\", event.target.value.getInt16(0,true));\r\n      //console.log(\"ACCEL_DATA_Y\", event.target.value.getInt16(2,true));\r\n      //console.log(\"ACCEL_DATA_Z\", event.target.value.getInt16(4,true));\r\n      this.accelerometer.x = event.target.value.getInt16(0, true);\r\n      this.accelerometer.y = event.target.value.getInt16(2, true);\r\n      this.accelerometer.z = event.target.value.getInt16(4, true);\r\n    }\r\n\r\n    // MAGNETOMETER CHARACTERISTIC (raw data)\r\n    if (event.target.uuid == MAGNETO_DATA) {\r\n      //  console.log(\"MAGNETO_DATA_X\", event.target.value.getInt16(0,true));\r\n      //  console.log(\"MAGNETO_DATA_Y\", event.target.value.getInt16(2,true));\r\n      //  console.log(\"MAGNETO_DATA_Z\", event.target.value.getInt16(4,true));\r\n      this.magnetometer_raw.x = event.target.value.getInt16(0, true);\r\n      this.magnetometer_raw.y = event.target.value.getInt16(2, true);\r\n      this.magnetometer_raw.z = event.target.value.getInt16(4, true);\r\n    }\r\n\r\n    // MAGNETOMETER CHARACTERISTIC (bearing)\r\n    if (event.target.uuid == MAGNETO_BEARING) {\r\n      //console.log(\"BEARING\", event.target.value.getInt16(0,true));\r\n      this.magnetometer_bearing = event.target.value.getInt16(0, true);\r\n    }\r\n\r\n    // TEMPERATURE CHARACTERISTIC\r\n    if (event.target.uuid == TEMP_DATA) {\r\n      //console.log(\"TEMP_DATA\", event.target.value.getInt8());\r\n      this.temperature = event.target.value.getInt8();\r\n\r\n    }\r\n  }\r\n\r\n  searchDevice() {\r\n    // filters: []\r\n    var options = {};\r\n    options.acceptAllDevices = true;\r\n    options.optionalServices = [ACCEL_SRV, MAGNETO_SRV, BTN_SRV, IO_PIN_SRV, LED_SRV, TEMP_SRV];\r\n\r\n    console.log('Requesting Bluetooth Device...');\r\n    console.log('with ' + JSON.stringify(options));\r\n\r\n    navigator.bluetooth.requestDevice(options)\r\n    .then(device => {\r\n\r\n      console.log('> Name:             ' + device.name);\r\n      console.log('> Id:               ' + device.id);\r\n\r\n      device.addEventListener('gattserverdisconnected', this.onDisconnectCallback);\r\n\r\n      // Attempts to connect to remote GATT Server.\r\n      return device.gatt.connect();\r\n\r\n    })\r\n    .then(server => {\r\n      // Note that we could also get all services that match a specific UUID by\r\n      // passing it to getPrimaryServices().\r\n      this.onConnectCallback();\r\n      console.log('Getting Services...');\r\n      return server.getPrimaryServices();\r\n    })\r\n    .then(services => {\r\n      console.log('Getting Characteristics...');\r\n      let queue = Promise.resolve();\r\n      services.forEach(service => {\r\n        queue = queue.then(_ => service.getCharacteristics().then(characteristics => {\r\n          console.log('> Service: ' + service.uuid);\r\n          characteristics.forEach(characteristic => {\r\n            console.log('>> Characteristic: ' + characteristic.uuid + ' ' +\r\n              getSupportedProperties(characteristic));\r\n\r\n            //need to store all the characteristic I want to write to be able to access them later.\r\n            switch (characteristic.uuid) {\r\n              case IO_PIN_DATA:\r\n                this.characteristic.IO_PIN_DATA = characteristic;\r\n                break;\r\n\r\n              case IO_AD_CONFIG:\r\n                this.characteristic.IO_AD_CONFIG = characteristic;\r\n                break;\r\n\r\n              case IO_PIN_CONFIG:\r\n                this.characteristic.IO_PIN_CONFIG = characteristic;\r\n                break;\r\n\r\n              case IO_PIN_PWM:\r\n                this.characteristic.IO_PIN_PWM = characteristic;\r\n                break;\r\n\r\n              case LED_STATE:\r\n                this.characteristic.LED_STATE = characteristic;\r\n                this.connected = true;\r\n\r\n                break;\r\n\r\n              case LED_TEXT:\r\n                this.characteristic.LED_TEXT = characteristic;\r\n                break;\r\n\r\n              case LED_SCROLL:\r\n                this.characteristic.LED_SCROLL = characteristic;\r\n                break;\r\n\r\n              default:\r\n\r\n            }\r\n\r\n\r\n            if (getSupportedProperties(characteristic).includes('NOTIFY')) {\r\n              characteristic.startNotifications().catch(err => console.log('startNotifications', err));\r\n              characteristic.addEventListener('characteristicvaluechanged',\r\n                this.characteristic_updated.bind(this));\r\n            }\r\n          });\r\n        }));\r\n      });\r\n      return queue;\r\n    }\r\n  )\r\n    .catch(error => {\r\n      console.log('Argh! ' + error);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n/* Utils */\r\n\r\n// function isWebBluetoothEnabled() {\r\n//   if (navigator.bluetooth) {\r\n//     return true;\r\n//   } else {\r\n//     ChromeSamples.setStatus('Web Bluetooth API is not available.\\n' +\r\n//       'Please make sure the \"Experimental Web Platform features\" flag is enabled.');\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n\r\nfunction getSupportedProperties(characteristic) {\r\n  let supportedProperties = [];\r\n  for (const p in characteristic.properties) {\r\n    if (characteristic.properties[p] === true) {\r\n      supportedProperties.push(p.toUpperCase());\r\n    }\r\n  }\r\n  return '[' + supportedProperties.join(', ') + ']';\r\n}\r\n\r\nfunction toUTF8Array(str) {\r\n    var utf8 = [];\r\n    for (var i=0; i < str.length; i++) {\r\n        var charcode = str.charCodeAt(i);\r\n        if (charcode < 0x80) utf8.push(charcode);\r\n        else if (charcode < 0x800) {\r\n            utf8.push(0xc0 | (charcode >> 6),\r\n                      0x80 | (charcode & 0x3f));\r\n        }\r\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\r\n            utf8.push(0xe0 | (charcode >> 12),\r\n                      0x80 | ((charcode>>6) & 0x3f),\r\n                      0x80 | (charcode & 0x3f));\r\n        }\r\n        // surrogate pair\r\n        else {\r\n            i++;\r\n            // UTF-16 encodes 0x10000-0x10FFFF by\r\n            // subtracting 0x10000 and splitting the\r\n            // 20 bits of 0x0-0xFFFFF into two halves\r\n            charcode = 0x10000 + (((charcode & 0x3ff)<<10)\r\n                      | (str.charCodeAt(i) & 0x3ff));\r\n            utf8.push(0xf0 | (charcode >>18),\r\n                      0x80 | ((charcode>>12) & 0x3f),\r\n                      0x80 | ((charcode>>6) & 0x3f),\r\n                      0x80 | (charcode & 0x3f));\r\n        }\r\n    }\r\n    return utf8;\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { firestore } from \"../FirebaseDB/FirebaseDB\";\r\nimport \"./VirtualMicrobit.scss\";\r\nimport BluetoothSearchingIcon from '@material-ui/icons/BluetoothSearching';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {uBit} from \"../microBit\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(25).fill(null),\r\n        name: \"\",\r\n        buttonName: Array(25).fill(\"square\"),\r\n        iconFetch: {},\r\n        search: null,\r\n        displayControll: false,\r\n        submitControll: false,\r\n        microBit: new uBit(),\r\n        connectionStatus: false,\r\n        iconFetchAll: ['Names'],\r\n        selectOptions: [\"singleNameListOn\", \"allNamesListOff\"]\r\n      };\r\n    }\r\n\r\n  validatePair () {\r\n    // console.log(this.state.microBit.connected)\r\n    this.setState({\r\n      connectionStatus: this.state.microBit.connected\r\n  });\r\n  // console.log(this.state.connectionStatus)\r\n  }\r\n\r\n  handleClick(i) {\r\n      const squares = this.state.squares.slice();\r\n      if (squares[i] == null)\r\n      squares[i] = \"X\"\r\n      else \r\n      squares[i] = null\r\n      this.setState({\r\n          squares: squares\r\n      });\r\n\r\n      \r\n      const buttonName = this.state.buttonName.slice();\r\n      if (buttonName[i] === \"square\")\r\n      buttonName[i] = \"on\"\r\n      else\r\n      buttonName[i] = \"square\"\r\n      this.setState({\r\n        buttonName: buttonName\r\n      });   \r\n  }\r\n\r\n  displayIcon () {\r\n    const coor = this.state.iconFetch\r\n    const buttonName = this.state.buttonName.slice();\r\n\r\n    console.log(\"Icon should be displayed: \" + coor)\r\n\r\n      coor.keyValue.forEach((item, i) => {\r\n        console.log(\"Current button class name: \" + buttonName[i] + \", will be set to: \" + item.className + \" according to coordinates from database.\")\r\n\r\n        if (buttonName[i] !== item.className)\r\n          buttonName[i] = \"on\"\r\n          else\r\n          buttonName[i] = \"square\"\r\n          this.setState({\r\n            buttonName: buttonName,\r\n            displayControll: false\r\n          }); \r\n    })\r\n  }\r\n\r\n  setName(event){\r\n      this.setState({\r\n          name: event.target.value\r\n      })\r\n  }\r\n\r\n  setSearch(event){\r\n    this.setState({\r\n        search: event.target.value\r\n    })\r\n}\r\n\r\n  renderSquare(i) {\r\n\r\n    return (\r\n      <button className={this.state.buttonName[i]} onClick={() => this.handleClick(i)}>\r\n          {/* {props.value} */}\r\n      </button>\r\n      );\r\n  }\r\n\r\n  fetchIcon(event) {\r\n      event.preventDefault();\r\n      // console.log(\"read data\")\r\n      const iconDictionary = firestore.collection('coordinates');\r\n\r\n      iconDictionary.doc(this.state.search).get().then((doc) => {\r\n        if (doc.exists) {\r\n          this.setState({\r\n            iconFetch: doc.data(),\r\n            displayControll: true\r\n          });\r\n          console.log(\"Icon Coordinates: \", this.state.iconFetch);\r\n          this.clear()\r\n          alert(\"Icon is fetched, click DISPLAY button!\")\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            alert(\"No such icon!\");\r\n            this.setState({\r\n              displayControll: false\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n \r\n  }\r\n\r\n  fetchIconAll(event) {\r\n    event.preventDefault();\r\n    let nameArray =  []\r\n    // console.log(\"read data\")\r\n    const iconDictionary = firestore.collection('coordinates');\r\n    iconDictionary.get().then(res => {\r\n      res.docs.map(doc => \r\n        nameArray.push(doc.id))\r\n    this.setState({\r\n      iconFetchAll: nameArray,\r\n      displayControll: false,\r\n      selectOptions: [\"singleNameListOff\", \"allNamesListOn\"]\r\n    })\r\n    // console.log(this.state.iconFetchAll)\r\n  }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n\r\n}\r\n\r\n  checkIcon () {\r\n      \r\n      const iconDictionary = firestore.collection('coordinates');\r\n\r\n      iconDictionary.doc(this.state.name).get().then((doc) => {\r\n        if (doc.exists) {\r\n          this.setState({\r\n            submitControll: false\r\n          });\r\n          alert(\"Icon name is existed, choose another name!\")\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            this.setState({\r\n              submitControll: true\r\n            });\r\n            alert(\"Name is okay\");\r\n        }\r\n    }).catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n\r\n  async saveIcon(event){\r\n      \r\n      const squares = this.state.squares.slice();\r\n      let board = []\r\n      let icon = {}\r\n\r\n      squares.forEach((square, index) => {\r\n        board.push({\"Position\" : index,\r\n                    \"className\" : !!square ? \"on\" : \"square\"})\r\n          \r\n      })\r\n      icon['keyValue'] = board\r\n      console.log(JSON.stringify(icon))\r\n      const db = firestore.collection(\"coordinates\");\r\n      db.doc(this.state.name).set(icon)\r\n      .catch((error) => {\r\n          console.log(error)\r\n      });\r\n\r\n      this.setState({\r\n        submitControll: false\r\n      });\r\n\r\n      event.preventDefault()\r\n      \r\n      alert(\"Your icon is saved!\")\r\n      \r\n  }\r\n\r\n  clear() {\r\n    this.setState({\r\n      squares: Array(25).fill(null),\r\n      buttonName: Array(25).fill(\"square\")\r\n  });\r\n    console.log(\"clear procesing\")\r\n   \r\n\r\n  }\r\n\r\n  lightIcon() {\r\n    const squares = this.state.squares.slice();\r\n    let ledMatrix = []\r\n    let ledMatrix_row0 = []\r\n    let ledMatrix_row1 = []\r\n    let ledMatrix_row2 = []\r\n    let ledMatrix_row3 = []\r\n    let ledMatrix_row4 = []\r\n  \r\n    squares.forEach((square, index) => {\r\n      if (index <= 4) {\r\n        ledMatrix_row0.push(!!square ? '1' : '0')\r\n      } else if (index <= 9) {\r\n        ledMatrix_row1.push(!!square ? '1' : '0')\r\n      } else if (index <= 14) {\r\n        ledMatrix_row2.push(!!square ? '1' : '0')\r\n      } else if (index <= 19) {\r\n        ledMatrix_row3.push(!!square ? '1' : '0')\r\n      } else {\r\n        ledMatrix_row4.push(!!square ? '1' : '0')\r\n      }\r\n    })\r\n  \r\n    ledMatrix = [ledMatrix_row0, ledMatrix_row1, ledMatrix_row2, ledMatrix_row3, ledMatrix_row4]\r\n    \r\n    console.log(JSON.stringify(ledMatrix))\r\n\r\n    if (this.state.connectionStatus) {\r\n      this.state.microBit.writeMatrixIcon(ledMatrix)\r\n    } else {\r\n      alert(\"Your micro:bit device is not paired!\")\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  render() {\r\n    const status = 'micro:bit Icons';\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"status\">{status}</h1>\r\n          <div className=\"ledBackground\">\r\n            <div className=\"ledTitle\">\r\n              <div className=\"leftCornor\"></div>\r\n              <div className=\"midIcon\"></div>\r\n            </div>\r\n            <div className=\"ledPane\">\r\n              <div className=\"leftPane\">\r\n                <div className=\"leftButton\"></div>\r\n              </div>\r\n              <div className=\"midPane\">\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(0)}\r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(5)}\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n                {this.renderSquare(9)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(10)}\r\n                {this.renderSquare(11)}\r\n                {this.renderSquare(12)}\r\n                {this.renderSquare(13)}\r\n                {this.renderSquare(14)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(15)}\r\n                {this.renderSquare(16)}\r\n                {this.renderSquare(17)}\r\n                {this.renderSquare(18)}\r\n                {this.renderSquare(19)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(20)}\r\n                {this.renderSquare(21)}\r\n                {this.renderSquare(22)}\r\n                {this.renderSquare(23)}\r\n                {this.renderSquare(24)}\r\n                </div>\r\n              </div>\r\n              <div className=\"rightPane\">\r\n                <div className=\"rightButton\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"ledFooter\"></div>\r\n          </div>\r\n        \r\n          <div className=\"clearButton\" style={{textAlign: 'center'}}>\r\n          <span>Reset:</span>\r\n          <IconButton color=\"secondary\" aria-label=\"add an alarm\" onClick={() => this.clear()}>\r\n                <HighlightOffIcon/>\r\n          </IconButton>\r\n          <span>Pair:</span>\r\n          <IconButton color=\"secondary\" aria-label=\"add an alarm\" onClick={(event) => this.state.microBit.searchDevice()}>\r\n          <BluetoothSearchingIcon/>\r\n          </IconButton>\r\n          <span>Sync:</span>\r\n          <IconButton color=\"secondary\" aria-label=\"add an alarm\" onMouseEnter={() => this.validatePair()} onClick={() => this.lightIcon()}>\r\n          <ImportantDevicesIcon/>\r\n          </IconButton>\r\n          </div>\r\n        <form validate=\"true\" autoComplete=\"off\" onSubmit={(event) => this.saveIcon(event)} >\r\n            <div className=\"nameField\">\r\n            <TextField id=\"standard-basic\" label=\"Give it a name\" required onChange={(event) => this.setName(event)} style={{\r\n                margin: '0 auto',\r\n                width: '125px'\r\n                }}/>\r\n            </div>\r\n            <div className=\"ledControll\">\r\n              <input type=\"submit\" value = \"SAVE\" disabled={!this.state.submitControll}></input>\r\n              <input type=\"button\" value = \"VALIDATE\" onClick={() => this.checkIcon()} disabled={this.state.name === \"\"}></input>\r\n            </div>\r\n        </form>\r\n        <form className={this.state.selectOptions[0]} validate=\"true\" autoComplete=\"off\" onSubmit={(event) => this.fetchIcon(event)} >\r\n            <TextField id=\"standard-basic-search\" label=\"Search\" required onChange={(event) => this.setSearch(event)} style={{\r\n                    margin: '15px auto',\r\n                    display: 'inline-flex',\r\n                    width: '145px'\r\n                    }}/>\r\n\r\n            <div className=\"searchControll\">\r\n            <input type=\"submit\" value = \"FETCH\"></input>\r\n            <input type=\"button\" value = \"DISPLAY\" disabled={!this.state.displayControll} onClick={() => this.displayIcon()}></input>\r\n            </div>\r\n            \r\n        </form>\r\n\r\n        <form className={this.state.selectOptions[1]} validate=\"true\" autoComplete=\"off\" onSubmit={(event) => this.fetchIcon(event)} >\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              select\r\n              label=\"Search\"\r\n              onChange={(event) => this.setSearch(event)}\r\n              style={{\r\n                margin: '15px auto',\r\n                display: 'inline-flex',\r\n                width: '145px'\r\n                }} >\r\n              {this.state.iconFetchAll.map((name, key) => (\r\n                  <MenuItem key={key} value={name}>\r\n                    {name}\r\n                  </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n            <div className=\"searchControll\">\r\n            <input type=\"submit\" value = \"FETCH\"></input>\r\n            <input type=\"button\" value = \"DISPLAY\" disabled={!this.state.displayControll} onClick={() => this.displayIcon()}></input>\r\n            </div>\r\n            \r\n        </form>\r\n        <div className=\"getAllIcons\">\r\n              <p>Click <IconButton color=\"secondary\" aria-label=\"add an alarm\" onClick={(event) => this.fetchIconAll(event)}>\r\n                <RefreshIcon/>\r\n              </IconButton>  to see all icons in database</p>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst VirtualMicrobit = () => {\r\n\r\n  return (\r\n      \r\n      <Container className=\"IconPage\" justify = \"center\">\r\n          \r\n          <div className=\"game\">\r\n              <div className=\"game-board\">\r\n                  <Board />\r\n              </div>\r\n              <div className=\"game-info\">\r\n                <Card >\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                      Tutorial of This Web Page\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Option 1: Click these squares to draw any icons you like. You can reset virtual pane by clicking <HighlightOffIcon/> icon\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Option 2: If you are satisfied with the icon you drew, you can save your icon to database. \r\n                      Before saving your icon, give a name and click VALIDATE button (name must be unique in database), then you can click SAVE button.\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Option 3: You can search icon in the database by names. Type a name and click SEARCH button.  \r\n                      If icon you want to search exists, then click DISPLAY button. Icon will be rendered to virtual pane.\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Option 4: You can also download icon showed in virtual pane to real micro:bit device.\r\n                      To do so, first need to pair your micro:bit device by clicking <BluetoothSearchingIcon/> icon. \r\n                      Once device is paired, click <ImportantDevicesIcon/> icon to light up icon from virtual pane to your real micro:bit device.\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      <b>Important Note:</b> Before pairing the device, download and upload this <a href=\"https://drive.google.com/uc?id=0B2Ud_NaMFsQSdm1BMVMtN3F4a3c&export=download\">firmware</a> on your BBC micro:bit board.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n          </div>\r\n        \r\n      </Container>\r\n      \r\n  );\r\n};\r\n\r\n\r\nexport default VirtualMicrobit;\r\n","/**\n * This App.js file contains routing set up for different pages in website.\n */\n\n import React from \"react\";\n import { Switch, Route } from 'react-router-dom';\n \n \n import VirtualMicrobit from \"./pages/VirtualMicrobit\";\n \n import \"./App.css\";\n \n const App = () => {\n   return (\n     <div className=\"App\">\n       <VirtualMicrobit />\n     </div>\n   );\n };\n \n export default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}